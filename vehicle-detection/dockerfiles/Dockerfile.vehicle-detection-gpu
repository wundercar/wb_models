ARG ENV
ARG BASE_IMAGE
ARG PYTHON_VER
FROM ${BASE_IMAGE}

MAINTAINER Aymen Ben Othmen <aymen.othmen@wundermobility.com>

# Set a docker label to advertise multi-model support on the container
# LABEL com.amazonaws.sagemaker.capabilities.multi-models=true
# Set a docker label to enable container to use SAGEMAKER_BIND_TO_PORT environment variable if present
LABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true

ARG PYTHON_VER
ARG ENV
ARG TEST_S3_BUCKET
ARG TEST_S3_IMG_PATH
ARG BATCH_SIZE
ARG DEBUG_MODE
ARG MODEL_SERVER_TIMEOUT
ARG MAX_MODEL_SERVER_WORKERS
ARG MAX_CONCURRENT_TRANSFORMERS
ARG BATCH_STRATEGY
ARG MAX_PAYLOAD_IN_MB

ENV ENV=${ENV}
ENV TEST_S3_BUCKET=${TEST_S3_BUCKET}
ENV TEST_S3_IMG_PATH=${TEST_S3_IMG_PATH}
ENV BATCH_SIZE=${BATCH_SIZE}
ENV DEBUG_MODE=${DEBUG_MODE}
ENV MODEL_SERVER_TIMEOUT=${MODEL_SERVER_TIMEOUT}
ENV MAX_MODEL_SERVER_WORKERS=${MAX_MODEL_SERVER_WORKERS}
ENV MAX_CONCURRENT_TRANSFORMERS=${MAX_CONCURRENT_TRANSFORMERS}
ENV BATCH_STRATEGY=${BATCH_STRATEGY}
ENV MAX_PAYLOAD_IN_MB=${MAX_PAYLOAD_IN_MB}

RUN git clone https://github.com/ultralytics/yolov5.git /tmp/yolov5
RUN mv /tmp/yolov5/models /opt/conda/lib/python$PYTHON_VER/site-packages
RUN mv /tmp/yolov5/utils /opt/conda/lib/python$PYTHON_VER/site-packages

COPY aws/ /root/.aws

RUN mv /root/.aws/credentials-$ENV /root/.aws/credentials && \
    rm /root/.aws/credentials-*

COPY program/ /tmp/program

RUN if [ "$ENV" = "prod" ] || [ "$ENV" = "staging" ] ; \
        then \
            mv /tmp/program /opt/program && \
            chmod 755 /opt/program; \
    fi

RUN rm -rf /root/.cache && \
    rm -rf /tmp/yolov5

ENV PATH="/opt/program:/opt/conda/bin:${PATH}"

WORKDIR /opt/program
ENTRYPOINT ["python", "serve.py"]
CMD ["serve"]
